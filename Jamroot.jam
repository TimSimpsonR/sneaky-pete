
# Using environment variables isn't the best form, but its a start.
import os ;
local BOOST_ROOT = [ os.environ BOOST_ROOT ] ;
local LIB_HOME = [ os.environ LIB_HOME ] ;

using testing ;

project
	:	requirements
		<include>include
		<include>$(BOOST_ROOT)
		<include>$(LIB_HOME)/amqpcpp/include
	;

# Base names of the source files for libboost_date_time
CPP_SOURCES = guest ;

# Declare our dependencies

# System libraries are found automatically by our toolset (GCC).
# So for example, if you pass "-lrabbitmq" to gcc, here its "<name>rabbitmq."
lib lib_json : : <name>json ;
lib lib_rabbitmq : : <name>rabbitmq ;
lib lib_mysqlcppconn : : <name>mysqlcppconn ;
lib lib_uuid : : <name>uuid ;

# Non system libraries which are just some file somewhere we link to.
lib lib_amqpcpp
	:
	: <file>$(LIB_HOME)/amqpcpp/libamqpcpp.a
	;

alias dependencies
	: lib_amqpcpp lib_json lib_rabbitmq lib_mysqlcppconn lib_uuid
	;

alias test_dependencies
	:	$(BOOST_ROOT)/libs/test/build//boost_unit_test_framework
	;

lib guest_lib
    : src/$(CPP_SOURCES).cc
    ;

exe receiver
	:	dependencies
		guest_lib
		src/receiver.cc
	:	<define>BOOST_TEST_DYN_LINK
	;

unit-test send_and_receive
	:	dependencies
		test_dependencies
		tests/send_and_receive.cc
	:	<testing.launcher>valgrind
	;

exe sender
	:	dependencies
		guest_lib
		src/test_sender.cc
	:   <dependency>send_and_receive
	;


