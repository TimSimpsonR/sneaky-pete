#!/bin/sh
set -e
ulimit -s unlimited

LOGFILE=/var/log/nova/guest.log
PIDFILE=/var/run/mysqld/mysqld.pid
HACKPASS=/tmp/hacker.sql
MYSQLDIR=/var/lib/mysql
# TODO: make this work with another restore directory
#       This will hopefully remove the need to delete existing files
#       and allow mysql to continue to run while the files are being
#       downloaded and installed.
RESTORE=$MYSQLDIR
TOKEN=$1
URL=$2

if [ ! $URL ] || [ ! $TOKEN ]; then
   exit "Missing url or token"
fi

#
# Clean the existing files
#
#  TODO: find a better way to do this!
for LINE in `ls $RESTORE`
do
    # Remove all files/folders except the few we need
    case $LINE in
        'my.cnf'|'mysql_upgrade_info'|'debian-5.1.flag')
            echo "[RESTORE] skipping removal of $LINE" >>$LOGFILE
            ;;
        ib*|xtrabackup*|mysql|lost*|backup-my.cnf)
            echo "[RESTORE] removing $LINE" >>$LOGFILE
            rm -rf $RESTORE/$LINE
            ;;
        *)
            echo "[RESTORE] Error unknown file: $LINE" >>$LOGFILE
    esac
done


# Extract all the files from the backup
/usr/bin/curl -s -H "X-Auth-Token: $TOKEN" -G $URL \
   | /bin/gunzip - \
   | /usr/bin/xbstream -x -C $RESTORE \
   2>>$LOGFILE

# Prepare the Database
/usr/bin/innobackupex --apply-log $RESTORE \
   --defaults-file=$RESTORE/backup-my.cnf \
   --ibbackup xtrabackup 2>>$LOGFILE

# TODO: Find a way to set $RESTORE != $MYSQLDIR and move the
#       files into place *after* apply-log has been run.

# Fix permissions on the restored files
chown -R mysql $MYSQLDIR

# #
# # We need to reset the passwords on the new instance to match the
# # new instance debian-sys-maint and os_admin passwords. These are
# # unique to each vm.
# #
# # http://dev.mysql.com/doc/refman/5.1/en/resetting-permissions.html
# #

# # first grab the passwords from the files
# PASSLINES=`awk '/password/{print $3}' /etc/mysql/my.cnf`
# OSADMIN=`echo $PASSLINES | awk '{print $1}'`
# PASSLINES=`awk '/password/{print $3}' /etc/mysql/debian.cnf`
# DEBSYS=`echo $PASSLINES | awk '{print $1}'`

# # Create the hacker sql file
# echo "UPDATE mysql.user SET Password=PASSWORD('$DEBSYS') WHERE User='debian-sys-maint';" > $HACKPASS
# echo "UPDATE mysql.user SET Password=PASSWORD('$OSADMIN') WHERE User='os_admin';" >> $HACKPASS
# echo "FLUSH PRIVILEGES;" >> $HACKPASS
# # keep it safe from everyone
# chmod 600 $HACKPASS
# chown mysql $HACKPASS

# echo "[RESTORE] starting mysql with auth off" >>$LOGFILE
# /usr/bin/mysqld_safe --init-file=$HACKPASS 2>>$LOGFILE &

# sleep 5
# echo "[RESTORE] stopping mysql" >>$LOGFILE
# if [ -e $PIDFILE ]; then
#     rm $HACKPASS
#     /bin/kill `cat $PIDFILE`
# else
#     rm $HACKPASS
#     echo "[RESTORE] MYSQL not running." >>$LOGFILE
#     exit 1
# fi

# # Wait a bit for it to stop
# sleep 5

# echo "[RESTORE] starting mysql" >>$LOGFILE
# # Start mysql up
# service mysql start
