#!/bin/sh
set -e
ulimit -s unlimited

LOGFILE=/var/log/nova/guest.log
PIDFILE=/var/run/mysqld/mysqld.pid
HACKPASS=/tmp/hacker.sql
MYSQLDIR=/var/lib/mysql
# TODO: make this work with another restore directory
#       This will hopefully remove the need to delete existing files
#       and allow mysql to continue to run while the files are being
#       downloaded and installed.
RESTORE=$MYSQLDIR
TOKEN=$1
URL=$2

if [ ! $URL ] || [ ! $TOKEN ]; then
   exit "Missing url or token"
fi

#
# Clean the existing files
#
#  TODO: find a better way to do this!
for LINE in `ls $RESTORE`
do
    # Remove all files/folders except the few we need
    case $LINE in
        'my.cnf'|'mysql_upgrade_info'|'debian-5.1.flag')
            echo "[RESTORE] skipping removal of $LINE" >>$LOGFILE
            ;;
        ib*|xtrabackup*|mysql|lost*|backup-my.cnf)
            echo "[RESTORE] removing $LINE" >>$LOGFILE
            rm -rf $RESTORE/$LINE
            ;;
        *)
            echo "[RESTORE] Error unknown file: $LINE" >>$LOGFILE
    esac
done


# Extract all the files from the backup
/usr/bin/curl -s -H "X-Auth-Token: $TOKEN" -G $URL \
   | /bin/gunzip - \
   | /usr/bin/xbstream -x -C $RESTORE \
   2>>$LOGFILE

# Prepare the Database
/usr/bin/innobackupex --apply-log $RESTORE \
   --defaults-file=$RESTORE/backup-my.cnf \
   --ibbackup xtrabackup 2>>$LOGFILE

# TODO: Find a way to set $RESTORE != $MYSQLDIR and move the
#       files into place *after* apply-log has been run.

# Fix permissions on the restored files
chown -R mysql $MYSQLDIR

